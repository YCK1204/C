#include <stdio.h>

#define swap(a, b, temp){temp = a; a = b; b = temp;}

void quick_sort(int* targets, int start, int end) {
	if (start >= end) return;
	int temp;
	int pivot = start;
	int left = start + 1;
	int right = end;
	while (left <= right) {
		while (left <= end && targets[left] <= targets[pivot]) left++;
		while (right > start && targets[right] >= targets[pivot]) right--;

		if (left > right) {
			swap(targets[pivot], targets[right], temp);
		}
		else {
			swap(targets[left], targets[right], temp);
		}
		quick_sort(targets, start, right - 1);
		quick_sort(targets, right + 1, end);
	}
}

int main() {
	int n, k, temp, a[100001], b[100001], sum = 0, max = -1;
	scanf_s("%d %d", &n, &k);
	for (int i = 0; i < n; i++) {
		scanf_s("%d", &a[i]);
	}
	for (int i = 0; i < n; i++) {
		scanf_s("%d", &b[i]);
	}
	quick_sort(a, 0, n - 1);
	quick_sort(b, 0, n - 1);
	for (int i = 0; i < k; i++) {
		for (int j = 0; j < n-i; j++) {
			max = b[j] > max ? b[j] : max;
		}
		swap(a[i], max, temp);
	}
	
	printf("%d", sum);
	return 0;

}
