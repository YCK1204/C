// 178 P

#include <stdio.h>
#define swap(a, b, temp) {temp = a; a = b; b = temp;}

void quick_sort(int* targets, int start, int end) {
	if (start >= end) return;
	int temp;
	int pivot = start;
	int left = start + 1;
	int right = end;

	while (left <= right) {
		while (left <= end && targets[left] > targets[pivot]) left++;
		while (right > start && targets[right] < targets[pivot]) right--;

		if (left > right) {
			swap(targets[pivot], targets[right], temp);
		}
		else {
			swap(targets[left], targets[right], temp);
		}
		quick_sort(targets, start, right - 1);
		quick_sort(targets, right + 1, end);
	}
}

int main() {
	int t, arr[501];
	scanf_s("%d", &t);
	for (int i = 0; i < t; i++) {
		scanf_s("%d", &arr[i]);
	}
	quick_sort(arr, 0, t - 1);
	for (int i = 0; i < t; i++) {
		printf("%d ", arr[i]);
	}
	return 0;
}
